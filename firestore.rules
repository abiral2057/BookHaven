rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Function to check if the user is an admin.
    // In a production app, this would check for a custom claim set via a server function.
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    // Products and Categories are public to read, but only admins can modify them.
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Customers collection is managed by admins.
    match /customers/{customerId} {
      allow read, write: if isAdmin();
    }

    // Orders can be created by any authenticated user.
    // Reading is restricted: admins can read all orders, but customers can only read their own.
    match /orders/{orderId} {
      allow create: if request.auth != null;
      allow read, update: if isAdmin() || (request.auth.uid == resource.data.userId);
      allow list: if isAdmin(); // Rule to allow admins to list all orders.
    }
    
    // This collection is used for a connection test and can be written to by any authenticated user.
    match /_test_writes/{docId} {
        allow write: if request.auth != null;
    }
  }
}